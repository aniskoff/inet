[General]
network = MainExperiment
total-stack = 7MiB

# **.server*.hasPcapRecorder = true
# **.server*.pcapRecorder.pcapFile = "results/server.pcap"
# **.client*.hasPcapRecorder = true
# **.client1.pcapRecorder.pcapFile = "results/client1.pcap"
# **.crcMode = "computed"
# **.pcapRecorder.pcapLinkType = 204     # Ppp
# *.visualizer.*.infoVisualizer[*].modules = "*.*.pcapRecorder[*]"

# Results recording 
**.result-recording-modes = all 
**.statistic-recording = true
**.scalar-recording = true 


# Clients & Servers
**.s*.numApps = 1 

# Routers
**.n*.numApps = 0 
**.n*.hasTcp = true 

# Clients Only
**.s*l.app[*].typename = "TcpClientApp"
**.s*l.app[0].active = true
**.s*l.app[0].localPort = -1
# **.s*l.app[0].tOpen = 0.2s
# **.s*l.app[0].tSend = 0.4s
# **.s*l.app[0].sendBytes = 1000000B
# # **.s*l.app[0].sendScript = ""
# **.s*l.app[0].tClose = 25s

# Servers Only
**.s*r.app[*].typename = "TcpSinkApp" 
**.s*r.app[0].localPort = 1000
# **.s*r.app[0].echoFactor = 2.0
# **.s*r.app[0].echoDelay = 0s

# Client to Servers Connections
**.s11l.app[0].connectAddress = "s11r"
**.s11l.app[0].connectPort = 1000

**.s11l.app[0].io.connectAddress = "s11r"
**.s11l.app[0].io.connectPort = 1000
###

**.s12l.app[0].connectAddress = "s32r"
**.s12l.app[0].connectPort = 1000

**.s12l.app[0].io.connectAddress = "s32r"
**.s12l.app[0].io.connectPort = 1000
### 

**.s21l.app[0].connectAddress = "s21r"
**.s21l.app[0].connectPort = 1000

**.s21l.app[0].io.connectAddress = "s21r"
**.s21l.app[0].io.connectPort = 1000
###


**.s22l.app[0].connectAddress = "s12r"
**.s22l.app[0].connectPort = 1000

**.s22l.app[0].io.connectAddress = "s12r"
**.s22l.app[0].io.connectPort = 1000
###


**.s31l.app[0].connectAddress = "s22r"
**.s31l.app[0].connectPort = 1000

**.s31l.app[0].io.connectAddress = "s22r"
**.s31l.app[0].io.connectPort = 1000
###

**.s32l.app[0].connectAddress = "s31r"
**.s32l.app[0].connectPort = 1000

**.s32l.app[0].io.connectAddress = "s31r"
**.s32l.app[0].io.connectPort = 1000
###


**.s*l.app[0].source.typename = "CSVPacketSource"
**.s*l.app[0].source.csvSep = 9  # char(9) == '\t'
**.s*l.app[0].source.packetRepresentation = "bytes" # other types are not supported
**.s*l.app[0].source.timePacketsStart = 1300 # seconds
**.s*l.app[0].source.timePacketsEnd = 1400


**.s11l.app[0].source.csvFilePath = "/Users/Nick/Main/Education/Masters/1st_year/fall/project/TrafficEngUCI/tracesSAP/tracesByFlowId/tracesFlowId4.tsv"
**.s12l.app[0].source.csvFilePath = "/Users/Nick/Main/Education/Masters/1st_year/fall/project/TrafficEngUCI/tracesSAP/tracesByFlowId/tracesFlowId27.tsv"
**.s21l.app[0].source.csvFilePath = "/Users/Nick/Main/Education/Masters/1st_year/fall/project/TrafficEngUCI/tracesSAP/tracesByFlowId/tracesFlowId10.tsv"
**.s22l.app[0].source.csvFilePath = "/Users/Nick/Main/Education/Masters/1st_year/fall/project/TrafficEngUCI/tracesSAP/tracesByFlowId/tracesFlowId23.tsv"
**.s31l.app[0].source.csvFilePath = "/Users/Nick/Main/Education/Masters/1st_year/fall/project/TrafficEngUCI/tracesSAP/tracesByFlowId/tracesFlowId12.tsv"
**.s32l.app[0].source.csvFilePath = "/Users/Nick/Main/Education/Masters/1st_year/fall/project/TrafficEngUCI/tracesSAP/tracesByFlowId/tracesFlowId21.tsv"


**.s*l.app[0].source.packetLength = 42B # Irrelevant parameter
# **.s*l.app[0].source.productionInterval = 1s 


**.observer.hostToMidHopCandidatesFp = "configs/hostsToMidHopCandids.csv"
**.observer.srcDestToFstLstHopsFp = "configs/srcDestToFstLstHops.csv"
**.observer.flowIdToSourceFp = "configs/flowIdToSource.csv"
**.observer.flowIdToPredFilesFp = "configs/flowIdToPredFiles.csv"
**.observer.csvSep = 44 # (,)
**.observer.nFlows = 6
**.observer.randomRoutingFreq = 3e-2 
**.observer.predictionInterval = 1e-2
**.observer.timePredStart = 1300 # seconds
**.observer.timePredEnd = 1400
**.observer.trafficEngAlgName = "none"



# NIC configuration
**.ppp[*].ppp.queue.typename = "DropTailQueue" # in routers
**.ppp[*].ppp.queue.packetCapacity = 5  # in routers

*.configurator.config = xmldoc("configs/ipv4conf.xml")

