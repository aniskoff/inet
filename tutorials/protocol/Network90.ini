[General]
network = Network90

# sender
*.sender.preemptingServer.datarate = 100Mbps
*.sender.sourceA.packetRepresentation = "bitCount"
*.sender.sourceA.productionInterval = uniform(0us, 500us)
*.sender.sourceA.packetLength = 1000B
*.sender.taggerA.userPriority = 3
*.sender.sourceB.packetRepresentation = "bitCount"
*.sender.sourceB.productionInterval = uniform(0us, 500us)
*.sender.sourceB.packetLength = 1000B
*.sender.taggerB.userPriority = 2
*.sender.sourceC.packetRepresentation = "bitCount"
*.sender.sourceC.productionInterval = uniform(0us, 500us)
*.sender.sourceC.packetLength = 1000B
*.sender.taggerC.userPriority = 1
*.sender.pendingQueue.comparatorClass = "inet::PacketUserPriorityComparator"
*.sender.fragmenter.fragmentLength = 1MB
*.sender.fragmenter.headerPosition = "back"
*.sender.fragmenter.fragmenterPolicy.typename = 
*.sender.inProgressQueue.comparatorClass = "inet::PacketUserPriorityComparator"
*.sender.transmitter.datarate = 100Mbps
*.sender.InterpacketGapInserter.duration = 1us

# receiver
*.receiver.receiver.datarate = 100Mbps
*.receiver.defragmenter.classifier.classifierClass = "inet::SequenceNumberPacketClassifierFunction"
*.receiver.defragmenter.defragmenter[*].headerPosition = "back"
*.receiver.classifier.packetFilters = "sourceA*;sourceB*;sourceC*"
*.receiver.classifier.packetDataFilters = "*;*;*"
